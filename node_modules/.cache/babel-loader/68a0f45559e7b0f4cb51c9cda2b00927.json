{"ast":null,"code":"var _jsxFileName = \"/Users/JMQuinn/Development/React/fun-with-lists/src/Paginated.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Paginated() {\n  _s();\n\n  const [offset, setOffset] = useState(0);\n  const [data, setData] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0);\n\n  const getData = async () => {\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/photos`);\n    const data = res.data;\n    const slice = data.slice(offset, offset + perPage);\n    const postData = slice.map(pd => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: pd.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pd.thumbnailUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)]\n    }, pd.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 50\n    }, this));\n    setData(postData);\n    setPageCount(Math.ceil(data.length / perPage));\n  };\n\n  const handlePageClick = e => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1);\n  };\n\n  useEffect(() => {\n    getData();\n  }, [offset]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Paginated\",\n    children: [data, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"prev\",\n      nextLabel: \"next\",\n      breakLabel: \"...\",\n      breakClassName: \"break-me\",\n      pageCount: pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: handlePageClick,\n      containerClassName: \"pagination\",\n      subContainerClassName: \"pages pagination\",\n      activeClassName: \"active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Paginated, \"/50CQ/Qkb7rQQ2dXa71NxVZ3hr0=\");\n\n_c = Paginated;\nexport default Paginated;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginated\");","map":{"version":3,"names":["React","useState","useEffect","axios","ReactPaginate","Paginated","offset","setOffset","data","setData","perPage","pageCount","setPageCount","getData","res","get","slice","postData","map","pd","title","thumbnailUrl","id","Math","ceil","length","handlePageClick","e","selectedPage","selected"],"sources":["/Users/JMQuinn/Development/React/fun-with-lists/src/Paginated.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport ReactPaginate from 'react-paginate';\nimport './App.css'\n\nfunction Paginated() {\n  const [offset, setOffset] = useState(0);\n  const [data, setData] = useState([]);\n  const [perPage] = useState(10);\n  const [pageCount, setPageCount] = useState(0)\n\n\n  const getData = async() => {\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/photos`)\n      const data = res.data;\n                const slice = data.slice(offset, offset + perPage)\n                const postData = slice.map(pd => <div key={pd.id}>\n                    <p>{pd.title}</p>\n                    <img src={pd.thumbnailUrl} alt=\"\"/>\n                </div>)\n                setData(postData)\n                setPageCount(Math.ceil(data.length / perPage))\n  }\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1)\n};\n\n useEffect(() => {\n   getData()\n }, [offset])\n\n  return (\n    <div className=\"Paginated\">\n      {data}\n       <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n    </div>\n  );\n}\n\nexport default Paginated;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,WAAP;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACS,OAAD,IAAYT,QAAQ,CAAC,EAAD,CAA1B;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;;EAGA,MAAMY,OAAO,GAAG,YAAW;IACvB,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,6CAAX,CAAlB;IACA,MAAMP,IAAI,GAAGM,GAAG,CAACN,IAAjB;IACU,MAAMQ,KAAK,GAAGR,IAAI,CAACQ,KAAL,CAAWV,MAAX,EAAmBA,MAAM,GAAGI,OAA5B,CAAd;IACA,MAAMO,QAAQ,GAAGD,KAAK,CAACE,GAAN,CAAUC,EAAE,iBAAI;MAAA,wBAC7B;QAAA,UAAIA,EAAE,CAACC;MAAP;QAAA;QAAA;QAAA;MAAA,QAD6B,eAE7B;QAAK,GAAG,EAAED,EAAE,CAACE,YAAb;QAA2B,GAAG,EAAC;MAA/B;QAAA;QAAA;QAAA;MAAA,QAF6B;IAAA,GAAUF,EAAE,CAACG,EAAb;MAAA;MAAA;MAAA;IAAA,QAAhB,CAAjB;IAIAb,OAAO,CAACQ,QAAD,CAAP;IACAL,YAAY,CAACW,IAAI,CAACC,IAAL,CAAUhB,IAAI,CAACiB,MAAL,GAAcf,OAAxB,CAAD,CAAZ;EACb,CAVD;;EAWA,MAAMgB,eAAe,GAAIC,CAAD,IAAO;IAC7B,MAAMC,YAAY,GAAGD,CAAC,CAACE,QAAvB;IACAtB,SAAS,CAACqB,YAAY,GAAG,CAAhB,CAAT;EACH,CAHC;;EAKD1B,SAAS,CAAC,MAAM;IACdW,OAAO;EACR,CAFQ,EAEN,CAACP,MAAD,CAFM,CAAT;EAIC,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,WACGE,IADH,eAEG,QAAC,aAAD;MACa,aAAa,EAAE,MAD5B;MAEa,SAAS,EAAE,MAFxB;MAGa,UAAU,EAAE,KAHzB;MAIa,cAAc,EAAE,UAJ7B;MAKa,SAAS,EAAEG,SALxB;MAMa,oBAAoB,EAAE,CANnC;MAOa,kBAAkB,EAAE,CAPjC;MAQa,YAAY,EAAEe,eAR3B;MASa,kBAAkB,EAAE,YATjC;MAUa,qBAAqB,EAAE,kBAVpC;MAWa,eAAe,EAAE;IAX9B;MAAA;MAAA;MAAA;IAAA,QAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GA5CQrB,S;;KAAAA,S;AA8CT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}