[{"/Users/JMQuinn/Development/React/fun-with-lists/src/index.js":"1","/Users/JMQuinn/Development/React/fun-with-lists/src/App.js":"2","/Users/JMQuinn/Development/React/fun-with-lists/src/reportWebVitals.js":"3","/Users/JMQuinn/Development/React/fun-with-lists/src/test.js":"4","/Users/JMQuinn/Development/React/fun-with-lists/src/Paginated.js":"5"},{"size":614,"mtime":1655824711940,"results":"6","hashOfConfig":"7"},{"size":2164,"mtime":1655768792249,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1655222297253,"results":"9","hashOfConfig":"7"},{"size":1441,"mtime":1655780426289,"results":"10","hashOfConfig":"7"},{"size":1600,"mtime":1655832607060,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},"vk6w7p",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/JMQuinn/Development/React/fun-with-lists/src/index.js",["31","32"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport NumbersMain from './App';\nimport Test from './test';\nimport Paginated from './Paginated';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Paginated />\n\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/Users/JMQuinn/Development/React/fun-with-lists/src/App.js",["33"],[],"\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nconst movies = [\n  {\n    id: 1,\n    name: 'Matrix',\n    country: 6,\n    collection: 300, //in CRs\n    releasedOn: 1999,\n  },\n  {\n    id: 2,\n    name: 'Tere Nam',\n    country: 10,\n    collection: 101,\n    releasedOn: 2004,\n  },\n  {\n    id: 3,\n    name: 'Bahubali',\n    country: 2,\n    collection: 500,\n    releasedOn: 1987,\n  },\n];\n\nexport const NumbersMain = () => {\n\n  useEffect(() => {\n   \n    getNumbers();\n  }, []);\n\nconst getNumbers = () =>\n{\n  // axios.get(\"https://qrng.anu.edu.au/API/jsonI.php?length=1&type=uint8&#8217\")\n  // .then((response)=>{\n  //   if (response.status==200){\n  //     console.log(response.data);\n  //   }\n  // });\n  \n  const numbers = [1,2,1,1,1,2,3,4,4,4,4,6,6,77,6,6,7,7,7,7,7,8,10,21,21,21,10,1,3,4,4,11,10,77,99];\n  console.log(numbers);\n  var newArray = [];\n  newArray = numbers.filter(function(e,pos){\n    console.log(e)\n    console.log('index:'+numbers.indexOf(e))\n            console.log('position:'+pos)\n    return numbers.indexOf(e) === pos;\n  });\n  console.log(newArray);\n}\n}\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('');\n\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        country: 'country',\n        collection: 'collection',\n        releasedOn: 'releasedOn',\n      };\n      const sortProperty = types[type];\n      const sorted = [...movies].sort((a, b) => a[sortProperty] - b[sortProperty]);\n      setData(sorted);\n    };\n    sortArray(sortType);\n  }, [sortType]);  \n return (\n  <div className=\"App\">\n  <select onChange={(e) => setSortType(e.target.value)}> \n    <option value=\"country\">Country</option>\n    <option value=\"collection\">Collection</option>\n    <option value=\"releasedOn\">Release Date</option>\n  </select>\n  {data.map(movie => (\n    <div key={movie.id} style={{ margin: '30px' }}>\n      <div>{`Movie: ${movie.name}`}</div>\n      <div>{`Country: ${movie.country}`}</div>\n      <div>{`Collection: ${movie.collection}`}</div>\n      <div>{`Year of Release: ${movie.releasedOn}`}</div>\n    </div>\n  ))}\n</div>\n  );\n}\n\nexport default NumbersMain;\n\n  \n  \n","/Users/JMQuinn/Development/React/fun-with-lists/src/reportWebVitals.js",[],[],"/Users/JMQuinn/Development/React/fun-with-lists/src/test.js",["34","35"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport './App.css';\n\n\n/**\n * Step one, get data\nstep two, set up web page for pagination\nStep three, sort and filter data for web page\n\njared*/\n\n\n\nconst dataInput = () =>{\n   \n\n}\n\nfunction Test(){\n\nconst [data, setData] = useState([]);\n\n    useEffect(() =>\n    {\n        axios.get(\"https://jsonplaceholder.typicode.com/todos\").then((response) => {\n            setData(response.data);\n           \n        })\n    \n    },[]);\n\n    function filterId(){\n        var newArray = [];\n        newArray = data.filter(function(e,pos){\n            console.log('index:'+data.indexOf(e))\n            console.log('position:'+pos)\n            return data.indexOf(e.userId) === pos;\n            \n          });\n          setData(newArray);\n          console.log(newArray);\n    }\n    function sortThisThing(){\n        var newArray = [];\n        newArray = data.sort((a, b) => a.userId - b.userId);\n        \n    console.log(newArray);\n        setData(newArray);\n    }\n\n    return (\n        <div className=\"App\">\n        <button onClick={sortThisThing}>Button</button>\n        {data.map(user => (\n          <div key={user.id} style={{ margin: '30px' }}>\n            <div>{`Id: ${user.userId}`}</div>\n            <div>{`title: ${user.title}`}</div>\n            <div>{`status: ${user.completed}`}</div>\n          </div>\n        ))}\n      </div>\n        );\n      \n    \n}\nexport default Test;\n\n","/Users/JMQuinn/Development/React/fun-with-lists/src/Paginated.js",["36"],[],{"ruleId":"37","severity":1,"message":"38","line":4,"column":8,"nodeType":"39","messageId":"40","endLine":4,"endColumn":19},{"ruleId":"37","severity":1,"message":"41","line":5,"column":8,"nodeType":"39","messageId":"40","endLine":5,"endColumn":12},{"ruleId":"37","severity":1,"message":"42","line":58,"column":10,"nodeType":"39","messageId":"40","endLine":58,"endColumn":13},{"ruleId":"37","severity":1,"message":"43","line":15,"column":7,"nodeType":"39","messageId":"40","endLine":15,"endColumn":16},{"ruleId":"37","severity":1,"message":"44","line":33,"column":14,"nodeType":"39","messageId":"40","endLine":33,"endColumn":22},{"ruleId":"45","severity":1,"message":"46","line":31,"column":5,"nodeType":"47","endLine":31,"endColumn":13,"suggestions":"48"},"no-unused-vars","'NumbersMain' is defined but never used.","Identifier","unusedVar","'Test' is defined but never used.","'App' is defined but never used.","'dataInput' is assigned a value but never used.","'filterId' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["49"],{"desc":"50","fix":"51"},"Update the dependencies array to be: [getData, offset]",{"range":"52","text":"53"},[951,959],"[getData, offset]"]